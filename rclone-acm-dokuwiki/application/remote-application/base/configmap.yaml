apiVersion: v1
data:
  transfer.sh: "#!/bin/bash\nif [[ ! -z \"${PREVIOUS_PVC}\" && $(kubectl get pvc $PREVIOUS_PVC
    ) ]]; then\n\tOLD=`kubectl get pvc --template {{.spec.dataSource.name}} $PREVIOUS_PVC`\n\tuntil
    [[ $(kubectl get pvc --template {{.spec.dataSource.name}} $PREVIOUS_PVC) != $OLD
    ]]; do\n\t\tsleep 3\n\tdone\n        kubectl delete pvc $PREVIOUS_PVC\nfi\nuntil
    kubectl get volumesnapshots --template {{.status.readyToUse}} `kubectl get replicationdestination
    $DESTINATION --template={{.status.latestImage.name}}`; do echo \"waiting for snapshot
    to be ready\"; sleep 1; done\ncat <<EOF | kubectl create -f - \napiVersion: v1\nkind:
    PersistentVolumeClaim\nmetadata:\n  name: $PVC_NAME\nspec:\n  accessModes:\n    -
    ReadWriteOnce\n  dataSource:\n    kind: VolumeSnapshot\n    apiGroup: snapshot.storage.k8s.io\n
    \   name: `kubectl get replicationdestination $DESTINATION --template={{.status.latestImage.name}}`\n
    \ resources:\n    requests:\n      storage: `kubectl get replicationdestination
    $DESTINATION --template={{.spec.rclone.capacity}}` \nEOF\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: transfer
  namespace: dokuwiki
