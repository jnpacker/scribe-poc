apiVersion: v1
data:
  transfer.sh: "#!/bin/bash\nif [[ $(kubectl get pvc $PVC_NAME) ]]; then\n    \texit
    0\nelif [[ $(kubectl get replicationdestination $DESTINATION | grep -v NAME |
    awk '{print $1}') == \\\"$DESTINATION\\\" ]]; then\n\tuntil kubectl get volumesnapshots
    --template {{.status.readyToUse}} `kubectl get replicationdestination $DESTINATION
    | grep -v NAME | awk '{print $1}'`; do echo \"waiting for snapshot to be ready\";
    sleep 1; done\n\tcat <<EOF | kubectl create -f - \n\tapiVersion: v1\n\tkind: PersistentVolumeClaim\n\tmetadata:\n\t
    \ name: $PVC_NAME\n\tspec:\n\t  accessModes:\n\t    - ReadWriteOnce\n\t  dataSource:\n\t
    \   kind: VolumeSnapshot\n\t    apiGroup: snapshot.storage.k8s.io\n\t    name:
    `kubectl get replicationdestination $DESTINATION --template={{.status.latestImage.name}}`\n\t
    \ resources:\n\t    requests:\n\t      storage: `kubectl get replicationdestination
    $DESTINATION --template={{.spec.rsync.capacity}}` \nEOF\nelse\n\tcat
    <<EOF | kubectl create -f - \n        apiVersion: v1\n        kind: PersistentVolumeClaim\n
    \       metadata:\n          name: $PVC_NAME\n        spec:\n          accessModes:\n
    \         - ReadWriteOnce\n          resources:\n           requests:\n             storage:
    $SIZE\nEOF\nfi\n"
kind: ConfigMap
metadata:
  name: transfer
  namespace: dokuwiki
