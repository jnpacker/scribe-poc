apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: scribe-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: replicationdestinations.scribe.backube
spec:
  group: scribe.backube
  names:
    kind: ReplicationDestination
    listKind: ReplicationDestinationList
    plural: replicationdestinations
    singular: replicationdestination
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - format: date-time
      jsonPath: .status.lastSyncTime
      name: Last sync
      type: string
    - jsonPath: .status.lastSyncDuration
      name: Duration
      type: string
    - format: date-time
      jsonPath: .status.nextSyncTime
      name: Next sync
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReplicationDestination defines the destination for a replicated
          volume
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of the ReplicationDestination,
              including the replication method to use and its configuration.
            properties:
              external:
                description: external defines the configuration when using an external
                  replication provider.
                properties:
                  parameters:
                    additionalProperties:
                      type: string
                    description: parameters are provider-specific key/value configuration
                      parameters. For more information, please see the documentation
                      of the specific replication provider being used.
                    type: object
                  provider:
                    description: 'provider is the name of the external replication
                      provider. The name should be of the form: domain.com/provider.'
                    type: string
                type: object
              paused:
                description: paused can be used to temporarily stop replication. Defaults
                  to "false".
                type: boolean
              rclone:
                description: rclone defines the configuration when using Rclone-based
                  replication.
                properties:
                  accessModes:
                    description: accessModes specifies the access modes for the destination
                      volume.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  capacity:
                    anyOf:
                    - type: integer
                    - type: string
                    description: capacity is the size of the destination volume to
                      create.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  copyMethod:
                    description: copyMethod describes how a point-in-time (PiT) image
                      of the destination volume should be created.
                    enum:
                    - None
                    - Clone
                    - Snapshot
                    type: string
                  destinationPVC:
                    description: destinationPVC is a PVC to use as the transfer destination
                      instead of automatically provisioning one. Either this field
                      or both capacity and accessModes must be specified.
                    type: string
                  path:
                    description: path is the remote path to sync from.
                    type: string
                  rcloneConfig:
                    description: rcloneConfig is the name of a Secret that contains
                      a valid Rclone configuration file.
                    type: string
                  storageClassName:
                    description: storageClassName can be used to specify the StorageClass
                      of the destination volume. If not set, the default StorageClass
                      will be used.
                    type: string
                  volumeSnapshotClassName:
                    description: volumeSnapshotClassName can be used to specify the
                      VSC to be used if copyMethod is Snapshot. If not set, the default
                      VSC is used.
                    type: string
                type: object
              rsync:
                description: rsync defines the configuration when using Rsync-based
                  replication.
                properties:
                  accessModes:
                    description: accessModes specifies the access modes for the destination
                      volume.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  address:
                    description: address is the remote address to connect to for replication.
                    type: string
                  capacity:
                    anyOf:
                    - type: integer
                    - type: string
                    description: capacity is the size of the destination volume to
                      create.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  copyMethod:
                    description: copyMethod describes how a point-in-time (PiT) image
                      of the destination volume should be created.
                    enum:
                    - None
                    - Clone
                    - Snapshot
                    type: string
                  destinationPVC:
                    description: destinationPVC is a PVC to use as the transfer destination
                      instead of automatically provisioning one. Either this field
                      or both capacity and accessModes must be specified.
                    type: string
                  path:
                    description: path is the remote path to rsync from. Defaults to
                      "/"
                    type: string
                  port:
                    description: port is the SSH port to connect to for replication.
                      Defaults to 22.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  serviceType:
                    description: serviceType determines the Service type that will
                      be created for incoming SSH connections.
                    type: string
                  sshKeys:
                    description: sshKeys is the name of a Secret that contains the
                      SSH keys to be used for authentication. If not provided, the
                      keys will be generated.
                    type: string
                  sshUser:
                    description: sshUser is the username for outgoing SSH connections.
                      Defaults to "root".
                    type: string
                  storageClassName:
                    description: storageClassName can be used to specify the StorageClass
                      of the destination volume. If not set, the default StorageClass
                      will be used.
                    type: string
                  volumeSnapshotClassName:
                    description: volumeSnapshotClassName can be used to specify the
                      VSC to be used if copyMethod is Snapshot. If not set, the default
                      VSC is used.
                    type: string
                type: object
              trigger:
                description: trigger determines if/when the destination should attempt
                  to synchronize data with the source.
                properties:
                  schedule:
                    description: schedule is a cronspec (https://en.wikipedia.org/wiki/Cron#Overview)
                      that can be used to schedule replication to occur at regular,
                      time-based intervals.
                    pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                    type: string
                type: object
            type: object
          status:
            description: status is the observed state of the ReplicationDestination
              as determined by the controller.
            properties:
              conditions:
                description: conditions represent the latest available observations
                  of the destination's state.
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              external:
                additionalProperties:
                  type: string
                description: external contains provider-specific status information.
                  For more details, please see the documentation of the specific replication
                  provider being used.
                type: object
              lastSyncDuration:
                description: lastSyncDuration is the amount of time required to send
                  the most recent update.
                type: string
              lastSyncTime:
                description: lastSyncTime is the time of the most recent successful
                  synchronization.
                format: date-time
                type: string
              latestImage:
                description: latestImage in the object holding the most recent consistent
                  replicated image.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
              nextSyncTime:
                description: nextSyncTime is the time when the next volume synchronization
                  is scheduled to start (for schedule-based synchronization).
                format: date-time
                type: string
              rsync:
                description: rsync contains status information for Rsync-based replication.
                properties:
                  address:
                    description: address is the address to connect to for incoming
                      SSH replication connections.
                    type: string
                  port:
                    description: port is the SSH port to connect to for incoming SSH
                      replication connections.
                    format: int32
                    type: integer
                  sshKeys:
                    description: sshKeys is the name of a Secret that contains the
                      SSH keys to be used for authentication. If not provided in .spec.rsync.sshKeys,
                      SSH keys will be generated and the appropriate keys for the
                      remote side will be placed here.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: replicationsources.scribe.backube
spec:
  group: scribe.backube
  names:
    kind: ReplicationSource
    listKind: ReplicationSourceList
    plural: replicationsources
    singular: replicationsource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.sourcePVC
      name: Source
      type: string
    - format: date-time
      jsonPath: .status.lastSyncTime
      name: Last sync
      type: string
    - jsonPath: .status.lastSyncDuration
      name: Duration
      type: string
    - format: date-time
      jsonPath: .status.nextSyncTime
      name: Next sync
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReplicationSource defines the source for a replicated volume
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of the ReplicationSource, including
              the replication method to use and its configuration.
            properties:
              external:
                description: external defines the configuration when using an external
                  replication provider.
                properties:
                  parameters:
                    additionalProperties:
                      type: string
                    description: parameters are provider-specific key/value configuration
                      parameters. For more information, please see the documentation
                      of the specific replication provider being used.
                    type: object
                  provider:
                    description: 'provider is the name of the external replication
                      provider. The name should be of the form: domain.com/provider.'
                    type: string
                type: object
              paused:
                description: paused can be used to temporarily stop replication. Defaults
                  to "false".
                type: boolean
              rclone:
                description: rclone defines the configuration when using Rclone-based
                  replication.
                properties:
                  accessModes:
                    description: accessModes can be used to override the accessModes
                      of the PiT image.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  capacity:
                    anyOf:
                    - type: integer
                    - type: string
                    description: capacity can be used to override the capacity of
                      the PiT image.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  copyMethod:
                    description: copyMethod describes how a point-in-time (PiT) image
                      of the source volume should be created.
                    enum:
                    - None
                    - Clone
                    - Snapshot
                    type: string
                  path:
                    description: path is the remote path to sync to.
                    type: string
                  rcloneConfig:
                    description: rcloneConfig is the name of a Secret that contains
                      a valid Rclone configuration file.
                    type: string
                  storageClassName:
                    description: storageClassName can be used to override the StorageClass
                      of the PiT image.
                    type: string
                  volumeSnapshotClassName:
                    description: volumeSnapshotClassName can be used to specify the
                      VSC to be used if copyMethod is Snapshot. If not set, the default
                      VSC is used.
                    type: string
                type: object
              rsync:
                description: rsync defines the configuration when using Rsync-based
                  replication.
                properties:
                  accessModes:
                    description: accessModes can be used to override the accessModes
                      of the PiT image.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  address:
                    description: address is the remote address to connect to for replication.
                    type: string
                  capacity:
                    anyOf:
                    - type: integer
                    - type: string
                    description: capacity can be used to override the capacity of
                      the PiT image.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  copyMethod:
                    description: copyMethod describes how a point-in-time (PiT) image
                      of the source volume should be created.
                    enum:
                    - None
                    - Clone
                    - Snapshot
                    type: string
                  path:
                    description: path is the remote path to rsync to. Defaults to
                      "/"
                    type: string
                  port:
                    description: port is the SSH port to connect to for replication.
                      Defaults to 22.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  serviceType:
                    description: serviceType determines the Service type that will
                      be created for incoming SSH connections.
                    type: string
                  sshKeys:
                    description: sshKeys is the name of a Secret that contains the
                      SSH keys to be used for authentication. If not provided, the
                      keys will be generated.
                    type: string
                  sshUser:
                    description: sshUser is the username for outgoing SSH connections.
                      Defaults to "root".
                    type: string
                  storageClassName:
                    description: storageClassName can be used to override the StorageClass
                      of the PiT image.
                    type: string
                  volumeSnapshotClassName:
                    description: volumeSnapshotClassName can be used to specify the
                      VSC to be used if copyMethod is Snapshot. If not set, the default
                      VSC is used.
                    type: string
                type: object
              sourcePVC:
                description: sourcePVC is the name of the PersistentVolumeClaim (PVC)
                  to replicate.
                type: string
              trigger:
                description: trigger determines when the latest state of the volume
                  will be captured (and potentially replicated to the destination).
                properties:
                  schedule:
                    description: schedule is a cronspec (https://en.wikipedia.org/wiki/Cron#Overview)
                      that can be used to schedule replication to occur at regular,
                      time-based intervals.
                    pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                    type: string
                type: object
            type: object
          status:
            description: status is the observed state of the ReplicationSource as
              determined by the controller.
            properties:
              conditions:
                description: conditions represent the latest available observations
                  of the source's state.
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              external:
                additionalProperties:
                  type: string
                description: external contains provider-specific status information.
                  For more details, please see the documentation of the specific replication
                  provider being used.
                type: object
              lastSyncDuration:
                description: lastSyncDuration is the amount of time required to send
                  the most recent update.
                type: string
              lastSyncTime:
                description: lastSyncTime is the time of the most recent successful
                  synchronization.
                format: date-time
                type: string
              nextSyncTime:
                description: nextSyncTime is the time when the next volume synchronization
                  is scheduled to start (for schedule-based synchronization).
                format: date-time
                type: string
              rsync:
                description: rsync contains status information for Rsync-based replication.
                properties:
                  address:
                    description: address is the address to connect to for incoming
                      SSH replication connections.
                    type: string
                  port:
                    description: port is the SSH port to connect to for incoming SSH
                      replication connections.
                    format: int32
                    type: integer
                  sshKeys:
                    description: sshKeys is the name of a Secret that contains the
                      SSH keys to be used for authentication. If not provided in .spec.rsync.sshKeys,
                      SSH keys will be generated and the appropriate keys for the
                      remote side will be placed here.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scribe-leader-election-role
  namespace: scribe-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: scribe-manager-role
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scribe.backube
  resources:
  - replicationdestinations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scribe.backube
  resources:
  - replicationdestinations/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scribe.backube
  resources:
  - replicationdestinations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scribe.backube
  resources:
  - replicationsources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scribe.backube
  resources:
  - replicationsources/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scribe.backube
  resources:
  - replicationsources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - security.openshift.io
  resourceNames:
  - scribe-mover
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scribe-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: scribe-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scribe-leader-election-rolebinding
  namespace: scribe-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scribe-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: scribe-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scribe-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scribe-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: scribe-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scribe-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scribe-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: scribe-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: scribe-controller-manager-metrics-service
  namespace: scribe-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: scribe-controller-manager
  namespace: scribe-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: controller:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
---
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities:
- AUDIT_WRITE
- SYS_CHROOT
apiVersion: security.openshift.io/v1
fsGroup:
  type: RunAsAny
kind: SecurityContextConstraints
metadata:
  name: scribe-mover
readOnlyRootFilesystem: false
requiredDropCapabilities:
- MKNOD
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
